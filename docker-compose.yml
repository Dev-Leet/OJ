version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: online-judge-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: online-judge
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - online-judge-network

  # Redis for Caching (Optional)
  #redis:
  #  image: redis:7-alpine
  #  container_name: online-judge-redis
  #  restart: unless-stopped
  #  ports:
  #    - "6379:6379"
  #  command: redis-server --appendonly yes
  #  volumes:
  #    - redis_data:/data
  #  networks:
  #    - online-judge-network

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: online-judge-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/online-judge?authSource=admin
      JWT_SECRET: your-production-jwt-secret-change-this
      JWT_EXPIRE: 7d
      FRONTEND_URL: http://localhost:3000
      GOOGLE_AI_API_KEY: ${GOOGLE_AI_API_KEY}
      #REDIS_URL: redis://redis:6379
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # For Docker-in-Docker judge execution
      - judge_temp:/tmp/judge # Temporary files for code execution
    depends_on:
      - mongodb
    #  - redis
    networks:
      - online-judge-network

  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: online-judge-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
    depends_on:
      - backend
    networks:
      - online-judge-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: online-judge-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - online-judge-network

  # Judge Language Containers (Pre-built for faster execution)
  judge-cpp:
    image: gcc:latest
    container_name: online-judge-cpp
    command: sleep infinity
    restart: unless-stopped
    networks:
      - online-judge-network

  judge-java:
    image: openjdk:11
    container_name: online-judge-java
    command: sleep infinity
    restart: unless-stopped
    networks:
      - online-judge-network

  judge-python:
    image: python:3.9-slim
    container_name: online-judge-python
    command: sleep infinity
    restart: unless-stopped
    networks:
      - online-judge-network

  judge-javascript:
    image: node:16-slim
    container_name: online-judge-javascript
    command: sleep infinity
    restart: unless-stopped
    networks:
      - online-judge-network

  # Monitoring and Analytics (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: online-judge-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - online-judge-network

  grafana:
    image: grafana/grafana:latest
    container_name: online-judge-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - online-judge-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  judge_temp:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  online-judge-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16